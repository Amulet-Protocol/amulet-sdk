// Generated by "npm run codegen". Do not modify this file manually.
import type { BN } from '@project-serum/anchor';
import type { PublicKey } from '@solana/web3.js';

export type UnderwritingMetadataState = {
  readonly underwritingAdminAuthKey: PublicKey;
  readonly treasurySolAccountKey: PublicKey;
  readonly treasurySolCancelCoverFeePctg: BN;
  readonly treasuryAuwtPremiumAccountKey: PublicKey;
  readonly treasuryAuwtPremiumSharingPctg: BN;
  readonly underwritingCallerAuthPdaKey: PublicKey;
  readonly underwritingCallerAuthPdaBump: number;
  readonly underwritingCallerAuwtTokenProgIndex: BN;
  readonly underwritingCallerPoolProgIndex: BN;
  readonly underwritingCallerCoverProgIndex: BN;
  readonly underwritingAuwtMintKey: PublicKey;
  readonly underwritingAmtsolMintKey: PublicKey;
  readonly premiumPoolAccountPdaKey: PublicKey;
  readonly premiumPoolAccountPdaBump: number;
  readonly premiumPoolAmtsolAccountKey: PublicKey;
  readonly premiumPoolAuwtAccountKey: PublicKey;
  readonly unearnedSolPremiumVirtualAmount: BN;
  readonly programIsPaused: boolean;
};
export type ProductPremiumState = {
  readonly productId: BN;
  readonly programMetadataStateKey: PublicKey;
  readonly productPremiumStatePdaBump: number;
  readonly individualEarnedAmtsolPremiumVirtualAmount: BN;
  readonly individualEarnedAuwtPremiumVirtualAmount: BN;
  readonly treasuryEarnedAmtsolPremiumVirtualAmount: BN;
  readonly treasuryEarnedAuwtPremiumVirtualAmount: BN;
  readonly commonEarnedAmtsolPremiumVirtualAmount: BN;
  readonly commonEarnedAuwtPremiumVirtualAmount: BN;
};
export type InitializeMetadataStateParam = {
  readonly treasurySolCancelCoverFeePctg: BN;
  readonly treasuryAuwtPremiumSharingPctg: BN;
  readonly underwritingCallerAuthPdaBump: number;
  readonly premiumPoolAccountPdaBump: number;
  readonly underwritingCallerAuwtTokenProgIndex: BN;
  readonly underwritingCallerPoolProgIndex: BN;
  readonly underwritingCallerCoverProgIndex: BN;
};
export type InitializeMetadataStateAccounts = {
  readonly programInitializerAuth: PublicKey | string;
  readonly programMetadataState: PublicKey | string;
  readonly underwritingAdminAuth: PublicKey | string;
  readonly underwritingCallerAuthPda: PublicKey | string;
  readonly premiumPoolAccountPda: PublicKey | string;
  readonly premiumPoolAmtsolAccount: PublicKey | string;
  readonly premiumPoolAuwtAccount: PublicKey | string;
  readonly treasuryAuwtPremiumAccount: PublicKey | string;
  readonly treasurySolAccount: PublicKey | string;
  readonly auwtMint: PublicKey | string;
  readonly amtsolMint: PublicKey | string;
  readonly systemProgram: PublicKey | string;
};
export type InitializeProductPremiumStateParam = {
  readonly productId: BN;
};
export type InitializeProductPremiumStateAccounts = {
  readonly programMetadataState: PublicKey | string;
  readonly underwritingAdminAuth: PublicKey | string;
  readonly productPremiumState: PublicKey | string;
  readonly systemProgram: PublicKey | string;
};
export type AdminUpdateAdminAuthInfoAccounts = {
  readonly programMetadataState: PublicKey | string;
  readonly newUnderwritingAdminAuth: PublicKey | string;
  readonly underwritingAdminAuth: PublicKey | string;
};
export type AdminUpdateProgramPauseInfoParam = {
  readonly programIsPaused: boolean;
};
export type AdminUpdateProgramPauseInfoAccounts = {
  readonly programMetadataState: PublicKey | string;
  readonly underwritingAdminAuth: PublicKey | string;
};
export type AdminUpdateMetadataInfoParam = {
  readonly treasurySolCancelCoverFeePctg: BN;
  readonly treasuryAuwtPremiumSharingPctg: BN;
  readonly underwritingCallerAuwtTokenProgIndex: BN;
  readonly underwritingCallerPoolProgIndex: BN;
  readonly underwritingCallerCoverProgIndex: BN;
};
export type AdminUpdateMetadataInfoAccounts = {
  readonly programMetadataState: PublicKey | string;
  readonly underwritingAdminAuth: PublicKey | string;
};
export type BuyCoverParam = {
  readonly coverId: BN;
  readonly coverOwner: PublicKey;
  readonly coverReferrer: PublicKey;
  readonly coverProductId: BN;
  readonly coverDurationInDays: BN;
  readonly coverCurrency: PublicKey;
  readonly coverAmount: BN;
};
export type BuyCoverAccounts = {
  readonly programMetadataState: PublicKey | string;
  readonly premiumPoolAccountPda: PublicKey | string;
  readonly productState: PublicKey | string;
  readonly poolMetadataState: PublicKey | string;
  readonly auwtState: PublicKey | string;
  readonly individualPoolState: PublicKey | string;
  readonly quotationMetadataState: PublicKey | string;
  readonly quotationState: PublicKey | string;
  readonly quotationResultState: PublicKey | string;
  readonly coverMetadataState: PublicKey | string;
  readonly coverState: PublicKey | string;
  readonly buyer: PublicKey | string;
  readonly nftAta: PublicKey | string;
  readonly nftMetadataState: PublicKey | string;
  readonly underwritingCallerAuthPda: PublicKey | string;
  readonly quotationProgram: PublicKey | string;
  readonly auwtProgram: PublicKey | string;
  readonly poolProgram: PublicKey | string;
  readonly coverProgram: PublicKey | string;
  readonly sysvarClock: PublicKey | string;
  readonly systemProgram: PublicKey | string;
};
export type RenewCoverParam = {
  readonly coverId: BN;
  readonly newCoverDurationInDays: BN;
};
export type RenewCoverAccounts = {
  readonly programMetadataState: PublicKey | string;
  readonly premiumPoolAccountPda: PublicKey | string;
  readonly productState: PublicKey | string;
  readonly poolMetadataState: PublicKey | string;
  readonly auwtState: PublicKey | string;
  readonly individualPoolState: PublicKey | string;
  readonly quotationMetadataState: PublicKey | string;
  readonly quotationState: PublicKey | string;
  readonly quotationResultState: PublicKey | string;
  readonly coverMetadataState: PublicKey | string;
  readonly coverState: PublicKey | string;
  readonly buyer: PublicKey | string;
  readonly nftAta: PublicKey | string;
  readonly nftMetadataState: PublicKey | string;
  readonly underwritingCallerAuthPda: PublicKey | string;
  readonly quotationProgram: PublicKey | string;
  readonly coverProgram: PublicKey | string;
  readonly sysvarClock: PublicKey | string;
  readonly systemProgram: PublicKey | string;
};
export type ExpireCoverParam = {
  readonly coverId: BN;
};
export type ExpireCoverAccounts = {
  readonly programMetadataState: PublicKey | string;
  readonly poolMetadataState: PublicKey | string;
  readonly auwtState: PublicKey | string;
  readonly individualPoolState: PublicKey | string;
  readonly coverMetadataState: PublicKey | string;
  readonly coverState: PublicKey | string;
  readonly underwritingCallerAuthPda: PublicKey | string;
  readonly auwtProgram: PublicKey | string;
  readonly poolProgram: PublicKey | string;
  readonly coverProgram: PublicKey | string;
  readonly sysvarClock: PublicKey | string;
};
export type CancelCoverParam = {
  readonly coverId: BN;
};
export type CancelCoverAccounts = {
  readonly programMetadataState: PublicKey | string;
  readonly premiumPoolAccountPda: PublicKey | string;
  readonly treasurySolAccount: PublicKey | string;
  readonly poolMetadataState: PublicKey | string;
  readonly auwtState: PublicKey | string;
  readonly individualPoolState: PublicKey | string;
  readonly coverMetadataState: PublicKey | string;
  readonly coverState: PublicKey | string;
  readonly owner: PublicKey | string;
  readonly underwritingCallerAuthPda: PublicKey | string;
  readonly auwtProgram: PublicKey | string;
  readonly poolProgram: PublicKey | string;
  readonly coverProgram: PublicKey | string;
  readonly sysvarClock: PublicKey | string;
  readonly systemProgram: PublicKey | string;
};
export type StakeProductPremiumParam = {
  readonly coverId: BN;
};
export type StakeProductPremiumAccounts = {
  readonly programMetadataState: PublicKey | string;
  readonly coverMetadataState: PublicKey | string;
  readonly coverState: PublicKey | string;
  readonly underwritingCallerAuthPda: PublicKey | string;
  readonly premiumPoolAccountPda: PublicKey | string;
  readonly premiumPoolAmtsolAccount: PublicKey | string;
  readonly productPremiumState: PublicKey | string;
  readonly solstakingProgramMetadataState: PublicKey | string;
  readonly solstakingProgramPosState: PublicKey | string;
  readonly solstakingProgramPosSolPda: PublicKey | string;
  readonly solstakingProgramLiqSolPda: PublicKey | string;
  readonly solstakingProgramLiqAmtsol: PublicKey | string;
  readonly solstakingProgramAuthPda: PublicKey | string;
  readonly amtsolMint: PublicKey | string;
  readonly sysvarClock: PublicKey | string;
  readonly coverProgram: PublicKey | string;
  readonly tokenProgram: PublicKey | string;
  readonly systemProgram: PublicKey | string;
  readonly amuletSolStakingProgram: PublicKey | string;
};
export type UnderwriteProductPremiumAccounts = {
  readonly programMetadataState: PublicKey | string;
  readonly premiumPoolAccountPda: PublicKey | string;
  readonly premiumPoolAmtsolAccount: PublicKey | string;
  readonly premiumPoolAuwtAccount: PublicKey | string;
  readonly productPremiumState: PublicKey | string;
  readonly splstakingProgramSummaryState: PublicKey | string;
  readonly splstakingProgramStakingInstanceState: PublicKey | string;
  readonly splstakingProgramStakedSplTa: PublicKey | string;
  readonly splstakingProgramLiqStakedSplTa: PublicKey | string;
  readonly splstakingProgramLiqAuwtTa: PublicKey | string;
  readonly splstakingProgramLiqAuwtTaAuthPda: PublicKey | string;
  readonly exchangeRateGroupState: PublicKey | string;
  readonly auwtState: PublicKey | string;
  readonly auwtMintAuthPda: PublicKey | string;
  readonly splSolStakingCallerPda: PublicKey | string;
  readonly auwtMint: PublicKey | string;
  readonly auwtProgram: PublicKey | string;
  readonly tokenProgram: PublicKey | string;
  readonly splSolStakingProgram: PublicKey | string;
};
export type DispatchPremiumAccounts = {
  readonly programMetadataState: PublicKey | string;
  readonly premiumPoolAccountPda: PublicKey | string;
  readonly premiumPoolAuwtAccount: PublicKey | string;
  readonly treasuryAuwtPremiumAccount: PublicKey | string;
  readonly auwtState: PublicKey | string;
  readonly auwtCommonEarnedPremiumAccount: PublicKey | string;
  readonly poolMetadataState: PublicKey | string;
  readonly individualPoolState: PublicKey | string;
  readonly individualPoolAuwtTokenAccount: PublicKey | string;
  readonly productPremiumState: PublicKey | string;
  readonly underwritingCallerAuthPda: PublicKey | string;
  readonly auwtProgram: PublicKey | string;
  readonly poolProgram: PublicKey | string;
  readonly tokenProgram: PublicKey | string;
};
