// Generated by "npm run codegen". Do not modify this file manually.
import type { BN } from '@project-serum/anchor';
import type { PublicKey } from '@solana/web3.js';

export type TicketState = {
  readonly programStakingInstanceStateKey: PublicKey;
  readonly beneficiary: PublicKey;
  readonly splTokenAmount: BN;
  readonly createdEpoch: BN;
};
export type AddLiquidityParam = {
  readonly splTokenAmount: BN;
};
export type AddLiquidityAccounts = {
  readonly programSummaryState: PublicKey | string;
  readonly programStakingInstanceState: PublicKey | string;
  readonly liqProvider: PublicKey | string;
  readonly programLiqStakedSplTa: PublicKey | string;
  readonly exchangeRateGroupState: PublicKey | string;
  readonly auwtState: PublicKey | string;
  readonly splTaTransferFrom: PublicKey | string;
  readonly lpMint: PublicKey | string;
  readonly lpMintAuthPda: PublicKey | string;
  readonly lpTokenTransferTo: PublicKey | string;
  readonly sysvarRent: PublicKey | string;
  readonly tokenProgram: PublicKey | string;
};
export type RemoveLiquidityParam = {
  readonly lpTokenAmount: BN;
};
export type RemoveLiquidityAccounts = {
  readonly programSummaryState: PublicKey | string;
  readonly programStakingInstanceState: PublicKey | string;
  readonly liqProvider: PublicKey | string;
  readonly lpMint: PublicKey | string;
  readonly lpTokenBurnFrom: PublicKey | string;
  readonly transferAuwtTo: PublicKey | string;
  readonly transferSplTokenTo: PublicKey | string;
  readonly programLiqStakedSplTa: PublicKey | string;
  readonly programLiqStakedSplTaAuthPda: PublicKey | string;
  readonly programLiqAuwtTa: PublicKey | string;
  readonly programLiqAuwtTaAuthPda: PublicKey | string;
  readonly tokenProgram: PublicKey | string;
  readonly sysvarRent: PublicKey | string;
};
export type LiqUnstakeSplParam = {
  readonly auwtTokenAmount: BN;
};
export type LiqUnstakeSplAccounts = {
  readonly programSummaryState: PublicKey | string;
  readonly programStakingInstanceState: PublicKey | string;
  readonly exchangeRateGroupState: PublicKey | string;
  readonly auwtState: PublicKey | string;
  readonly programLiqStakedSplTa: PublicKey | string;
  readonly programLiqStakedSplTaAuthPda: PublicKey | string;
  readonly programLiqAuwtTa: PublicKey | string;
  readonly transferAuwtFrom: PublicKey | string;
  readonly transferSplTokenTo: PublicKey | string;
  readonly pcuvStakedSplTa: PublicKey | string;
  readonly transferAuwtFromAuth: PublicKey | string;
  readonly tokenProgram: PublicKey | string;
  readonly sysvarRent: PublicKey | string;
};
export type StakeSplGetAuwtParam = {
  readonly splTokenAmount: BN;
};
export type StakeSplGetAuwtAccounts = {
  readonly programSummaryState: PublicKey | string;
  readonly programStakingInstanceState: PublicKey | string;
  readonly depositor: PublicKey | string;
  readonly programStakedSplTa: PublicKey | string;
  readonly exchangeRateGroupState: PublicKey | string;
  readonly auwtState: PublicKey | string;
  readonly splTaTransferFrom: PublicKey | string;
  readonly auwtMint: PublicKey | string;
  readonly auwtMintAuthPda: PublicKey | string;
  readonly programLiqAuwtTa: PublicKey | string;
  readonly programLiqAuwtTaAuthPda: PublicKey | string;
  readonly programLiqStakedSplTa: PublicKey | string;
  readonly auwtTokenTransferTo: PublicKey | string;
  readonly auwtProgram: PublicKey | string;
  readonly splSolStakingCallerPda: PublicKey | string;
  readonly tokenProgram: PublicKey | string;
};
export type MintFromSolToAuwtParam = {
  readonly solAmount: BN;
};
export type MintFromSolToAuwtAccounts = {
  readonly solstakingProgramMetadataState: PublicKey | string;
  readonly solstakingProgramPosState: PublicKey | string;
  readonly solstakingProgramPosSolPda: PublicKey | string;
  readonly solstakingProgramLiqSolPda: PublicKey | string;
  readonly solstakingProgramLiqAmtsol: PublicKey | string;
  readonly solstakingProgramAuthPda: PublicKey | string;
  readonly amtsolMint: PublicKey | string;
  readonly splstakingProgramSummaryState: PublicKey | string;
  readonly splstakingProgramStakingInstanceState: PublicKey | string;
  readonly splstakingProgramStakedSplTa: PublicKey | string;
  readonly splstakingProgramLiqStakedSplTa: PublicKey | string;
  readonly splstakingProgramLiqAuwtTa: PublicKey | string;
  readonly splstakingProgramLiqAuwtTaAuthPda: PublicKey | string;
  readonly exchangeRateGroupState: PublicKey | string;
  readonly auwtState: PublicKey | string;
  readonly auwtMintAuthPda: PublicKey | string;
  readonly auwtMint: PublicKey | string;
  readonly depositor: PublicKey | string;
  readonly amtsolTempTokenAccount: PublicKey | string;
  readonly auwtTokenTransferTo: PublicKey | string;
  readonly splSolStakingCallerPda: PublicKey | string;
  readonly auwtProgram: PublicKey | string;
  readonly amuletSolStakingProgram: PublicKey | string;
  readonly systemProgram: PublicKey | string;
  readonly tokenProgram: PublicKey | string;
  readonly associatedTokenProgram: PublicKey | string;
  readonly sysvarRent: PublicKey | string;
};
export type SubmitWithdrawTicketParam = {
  readonly auwtAmount: BN;
};
export type SubmitWithdrawTicketAccounts = {
  readonly programSummaryState: PublicKey | string;
  readonly programStakingInstanceState: PublicKey | string;
  readonly exchangeRateGroupState: PublicKey | string;
  readonly auwtState: PublicKey | string;
  readonly newTicketState: PublicKey | string;
  readonly splSolStakingCallerPda: PublicKey | string;
  readonly auwtMint: PublicKey | string;
  readonly auwtBurnFromTa: PublicKey | string;
  readonly auwtBurnFromAuth: PublicKey | string;
  readonly auwtProgram: PublicKey | string;
  readonly tokenProgram: PublicKey | string;
  readonly sysvarClock: PublicKey | string;
  readonly systemProgram: PublicKey | string;
  readonly sysvarRent: PublicKey | string;
};
export type ClaimSplTokenFromTicketAccounts = {
  readonly programSummaryState: PublicKey | string;
  readonly programStakingInstanceState: PublicKey | string;
  readonly withdrawTicketState: PublicKey | string;
  readonly programStakedSplTa: PublicKey | string;
  readonly programStakedSplTaAuthPda: PublicKey | string;
  readonly splTokenTransferTo: PublicKey | string;
  readonly withdrawAuth: PublicKey | string;
  readonly sysvarClock: PublicKey | string;
  readonly sysvarRent: PublicKey | string;
  readonly tokenProgram: PublicKey | string;
};