// Generated by "npm run codegen". Do not modify this file manually.
import type { BN } from '@project-serum/anchor';
import type { PublicKey } from '@solana/web3.js';

export type MetadataState = {
  readonly minDeposit: BN;
  readonly minWithdraw: BN;
  readonly rentExemptForTokenAccount: BN;
  readonly adminAuthKey: PublicKey;
  readonly treasuryAmtsolAccountKey: PublicKey;
  readonly programPosSolPdaKey: PublicKey;
  readonly programPosSolPdaBump: number;
  readonly posSolVirtualAmount: BN;
  readonly posProposeUnstakePendingAmount: BN;
  readonly posProposeUnstakeWaitingEpoch: BN;
  readonly programAuthPdaKey: PublicKey;
  readonly programAuthPdaBump: number;
  readonly amtsolMintKey: PublicKey;
  readonly amtsolVirtualSupply: BN;
  readonly amtsolPrice: BN;
  readonly lpSolAmtsolMintKey: PublicKey;
  readonly lpSolAmtsolSupply: BN;
  readonly programLiqSolPdaKey: PublicKey;
  readonly programLiqSolPdaBump: number;
  readonly liqSolAmount: BN;
  readonly programLiqAmtsolKey: PublicKey;
  readonly liqAmtsolAmount: BN;
  readonly programLiqFeeCeilingSol: BN;
  readonly programLiqFeeFloorSol: BN;
  readonly programLiqFeeBasepoint: number;
  readonly programLiqFeeMax: number;
  readonly programLiqFeeMin: number;
  readonly programLiqFeeTreasuryCut: number;
  readonly programIsPaused: boolean;
};
export type PosState = {
  readonly adminAuthKey: PublicKey;
  readonly operationAccountKey: PublicKey;
  readonly validatorManager: ValidatorManager;
  readonly stakeManager: StakeManager;
};
export type TicketState = {
  readonly programMetadataStateKey: PublicKey;
  readonly beneficiary: PublicKey;
  readonly solAmount: BN;
  readonly createdEpoch: BN;
};
export type StakeRecord = {
  readonly posStakeAccount: PublicKey;
  readonly lastUpdatedDelegatedLamports: BN;
  readonly lastUpdatedEpoch: BN;
};
export type StakeManager = {
  readonly posStakeList: List;
  readonly posUnstakeCoolingDownAmount: BN;
  readonly posStakeDepositPdaKey: PublicKey;
  readonly posStakeDepositPdaBump: number;
  readonly posStakeWithdrawPdaKey: PublicKey;
  readonly posStakeWithdrawPdaBump: number;
  readonly posMinStakeAmount: BN;
  readonly posNumOfSlotsBeforeEndOfEpoch: BN;
  readonly posStakeAccountRewardFeeBasepoint: BN;
  readonly posStakeAccountRewardFeeRate: BN;
  readonly posMaxStakeAccountRewardPctgBasepoint: BN;
  readonly posMaxStakeAccountRewardPctgRate: BN;
  readonly lastOperationEpoch: BN;
};
export type List = {
  readonly account: PublicKey;
  readonly itemSize: BN;
  readonly itemCount: BN;
};
export type ValidatorRecord = {
  readonly validatorVoteAccount: PublicKey;
  readonly activeBalance: BN;
  readonly score: BN;
  readonly lastStakeOperationEpoch: BN;
  readonly lastUnstakeOperationEpoch: BN;
  readonly lastScoreUpdatedEpoch: BN;
};
export type ValidatorManager = {
  readonly validatorList: List;
  readonly validatorManagerAuthority: PublicKey;
  readonly validatorExtraDelegationRunCount: BN;
  readonly totalActiveBalance: BN;
  readonly totalScore: BN;
};
export type InitializeMetadataStateParam = {
  readonly programAuthPdaBump: number;
  readonly programPosSolPdaBump: number;
  readonly programLiqSolPdaBump: number;
};
export type InitializeMetadataStateAccounts = {
  readonly programInitializerAuth: PublicKey | string;
  readonly programMetadataState: PublicKey | string;
  readonly systemProgram: PublicKey | string;
  readonly programAdminAuth: PublicKey | string;
  readonly treasuryAmtsolAccount: PublicKey | string;
  readonly programPosSolPda: PublicKey | string;
  readonly programAuthPda: PublicKey | string;
  readonly programLiqSolPda: PublicKey | string;
  readonly programLiqAmtsol: PublicKey | string;
  readonly amtsolMint: PublicKey | string;
  readonly lpSolAmtsolMint: PublicKey | string;
  readonly sysvarRent: PublicKey | string;
};
export type InitializePosStateParam = {
  readonly posStakeDepositPdaBump: number;
  readonly posStakeWithdrawPdaBump: number;
};
export type InitializePosStateAccounts = {
  readonly programInitializerAuth: PublicKey | string;
  readonly programPosState: PublicKey | string;
  readonly systemProgram: PublicKey | string;
  readonly operationAccount: PublicKey | string;
  readonly programAdminAuth: PublicKey | string;
  readonly validatorManagerAuth: PublicKey | string;
  readonly validatorListAccount: PublicKey | string;
  readonly posStakeDepositPda: PublicKey | string;
  readonly posStakeWithdrawPda: PublicKey | string;
  readonly posStakeListAccount: PublicKey | string;
  readonly sysvarRent: PublicKey | string;
};
export type PosDepositSolParam = {
  readonly solAmount: BN;
};
export type PosDepositSolAccounts = {
  readonly depositor: PublicKey | string;
  readonly programPosSolPda: PublicKey | string;
  readonly programMetadataState: PublicKey | string;
  readonly programPosState: PublicKey | string;
  readonly amtsolMint: PublicKey | string;
  readonly amtsolMintTo: PublicKey | string;
  readonly programAuthPda: PublicKey | string;
  readonly systemProgram: PublicKey | string;
  readonly tokenProgram: PublicKey | string;
  readonly programLiqAmtsol: PublicKey | string;
  readonly programLiqSolPda: PublicKey | string;
};
export type PosProposeUnstakeSolParam = {
  readonly amtsolAmount: BN;
};
export type PosProposeUnstakeSolAccounts = {
  readonly programMetadataState: PublicKey | string;
  readonly programPosState: PublicKey | string;
  readonly newTicketState: PublicKey | string;
  readonly amtsolMint: PublicKey | string;
  readonly amtsolBurnFrom: PublicKey | string;
  readonly amtsolBurnFromAuth: PublicKey | string;
  readonly tokenProgram: PublicKey | string;
  readonly sysvarClock: PublicKey | string;
  readonly systemProgram: PublicKey | string;
};
export type LiqAddSolParam = {
  readonly solAmount: BN;
};
export type LiqAddSolAccounts = {
  readonly programMetadataState: PublicKey | string;
  readonly programPosState: PublicKey | string;
  readonly liqProvider: PublicKey | string;
  readonly lpSolAmtsolMint: PublicKey | string;
  readonly programAuthPda: PublicKey | string;
  readonly programLiqAmtsol: PublicKey | string;
  readonly programLiqSolPda: PublicKey | string;
  readonly lpSolAmtsolMintTo: PublicKey | string;
  readonly amtsolMint: PublicKey | string;
  readonly tokenProgram: PublicKey | string;
  readonly systemProgram: PublicKey | string;
};
export type LiqRemoveParam = {
  readonly lpSolAmtsolAmount: BN;
};
export type LiqRemoveAccounts = {
  readonly programMetadataState: PublicKey | string;
  readonly lpSolAmtsolMint: PublicKey | string;
  readonly lpSolAmtsolBurnFrom: PublicKey | string;
  readonly lpSolAmtsolBurnFromAuth: PublicKey | string;
  readonly transferAmtsolTo: PublicKey | string;
  readonly amtsolMint: PublicKey | string;
  readonly programLiqSolPda: PublicKey | string;
  readonly programLiqAmtsol: PublicKey | string;
  readonly programAuthPda: PublicKey | string;
  readonly tokenProgram: PublicKey | string;
  readonly systemProgram: PublicKey | string;
};
export type LiqUnstakeSolParam = {
  readonly amtsolAmount: BN;
};
export type LiqUnstakeSolAccounts = {
  readonly programMetadataState: PublicKey | string;
  readonly programPosState: PublicKey | string;
  readonly treasuryAmtsolAccount: PublicKey | string;
  readonly amtsolMint: PublicKey | string;
  readonly programLiqSolPda: PublicKey | string;
  readonly programLiqAmtsol: PublicKey | string;
  readonly programAuthPda: PublicKey | string;
  readonly transferAmtsolFrom: PublicKey | string;
  readonly transferAmtsolFromAuth: PublicKey | string;
  readonly tokenProgram: PublicKey | string;
  readonly systemProgram: PublicKey | string;
};
export type AddValidatorParam = {
  readonly score: BN;
};
export type AddValidatorAccounts = {
  readonly programPosState: PublicKey | string;
  readonly validatorManagerAuth: PublicKey | string;
  readonly validatorListAccount: PublicKey | string;
  readonly validatorVoteAccount: PublicKey | string;
  readonly sysvarRent: PublicKey | string;
  readonly sysvarClock: PublicKey | string;
};
export type RemoveValidatorParam = {
  readonly index: BN;
  readonly validatorVoteAccount: PublicKey;
};
export type RemoveValidatorAccounts = {
  readonly programPosState: PublicKey | string;
  readonly validatorManagerAuth: PublicKey | string;
  readonly validatorListAccount: PublicKey | string;
  readonly operationAccount: PublicKey | string;
  readonly sysvarRent: PublicKey | string;
};
export type UpdateValidatorParam = {
  readonly index: BN;
  readonly validatorVoteAccount: PublicKey;
  readonly score: BN;
};
export type UpdateValidatorAccounts = {
  readonly programPosState: PublicKey | string;
  readonly validatorManagerAuth: PublicKey | string;
  readonly validatorListAccount: PublicKey | string;
  readonly sysvarClock: PublicKey | string;
};
export type PosDelegateStakeParam = {
  readonly validatorIndex: BN;
};
export type PosDelegateStakeAccounts = {
  readonly programMetadataState: PublicKey | string;
  readonly programPosState: PublicKey | string;
  readonly programPosSolPda: PublicKey | string;
  readonly validatorListAccount: PublicKey | string;
  readonly validatorVoteAccount: PublicKey | string;
  readonly posStakeListAccount: PublicKey | string;
  readonly posStakeDepositPda: PublicKey | string;
  readonly posStakeAccount: PublicKey | string;
  readonly posStakeRentPayer: PublicKey | string;
  readonly sysvarRent: PublicKey | string;
  readonly sysvarClock: PublicKey | string;
  readonly sysvarEpochSchedule: PublicKey | string;
  readonly sysvarStakeHistory: PublicKey | string;
  readonly stakeConfig: PublicKey | string;
  readonly stakeProgram: PublicKey | string;
  readonly systemProgram: PublicKey | string;
};
export type PosDeactivateStakeParam = {
  readonly validatorIndex: BN;
  readonly stakeIndex: BN;
};
export type PosDeactivateStakeAccounts = {
  readonly programMetadataState: PublicKey | string;
  readonly programPosState: PublicKey | string;
  readonly programPosSolPda: PublicKey | string;
  readonly validatorListAccount: PublicKey | string;
  readonly posStakeListAccount: PublicKey | string;
  readonly posStakeDepositPda: PublicKey | string;
  readonly posStakeAccount: PublicKey | string;
  readonly posSplittedStakeAccount: PublicKey | string;
  readonly posStakeRentPayer: PublicKey | string;
  readonly sysvarRent: PublicKey | string;
  readonly sysvarClock: PublicKey | string;
  readonly sysvarEpochSchedule: PublicKey | string;
  readonly sysvarStakeHistory: PublicKey | string;
  readonly stakeProgram: PublicKey | string;
  readonly systemProgram: PublicKey | string;
};
export type PosDirectDeactivateStakeParam = {
  readonly validatorIndex: BN;
  readonly stakeIndex: BN;
};
export type PosDirectDeactivateStakeAccounts = {
  readonly programPosState: PublicKey | string;
  readonly validatorManagerAuth: PublicKey | string;
  readonly validatorListAccount: PublicKey | string;
  readonly posStakeListAccount: PublicKey | string;
  readonly posStakeDepositPda: PublicKey | string;
  readonly posStakeAccount: PublicKey | string;
  readonly sysvarRent: PublicKey | string;
  readonly sysvarClock: PublicKey | string;
  readonly sysvarEpochSchedule: PublicKey | string;
  readonly stakeProgram: PublicKey | string;
  readonly systemProgram: PublicKey | string;
};
export type PosUpdateDeactivatedStakeParam = {
  readonly stakeIndex: BN;
};
export type PosUpdateDeactivatedStakeAccounts = {
  readonly programMetadataState: PublicKey | string;
  readonly programPosState: PublicKey | string;
  readonly programPosSolPda: PublicKey | string;
  readonly treasuryAmtsolAccount: PublicKey | string;
  readonly operationAccount: PublicKey | string;
  readonly posStakeListAccount: PublicKey | string;
  readonly posStakeWithdrawPda: PublicKey | string;
  readonly posStakeAccount: PublicKey | string;
  readonly amtsolMint: PublicKey | string;
  readonly programAuthPda: PublicKey | string;
  readonly sysvarClock: PublicKey | string;
  readonly sysvarStakeHistory: PublicKey | string;
  readonly stakeProgram: PublicKey | string;
  readonly tokenProgram: PublicKey | string;
  readonly systemProgram: PublicKey | string;
};
export type PosUpdateActiveStakeParam = {
  readonly validatorIndex: BN;
  readonly stakeIndex: BN;
};
export type PosUpdateActiveStakeAccounts = {
  readonly programMetadataState: PublicKey | string;
  readonly programPosState: PublicKey | string;
  readonly programPosSolPda: PublicKey | string;
  readonly treasuryAmtsolAccount: PublicKey | string;
  readonly validatorListAccount: PublicKey | string;
  readonly posStakeListAccount: PublicKey | string;
  readonly posStakeWithdrawPda: PublicKey | string;
  readonly posStakeAccount: PublicKey | string;
  readonly amtsolMint: PublicKey | string;
  readonly programAuthPda: PublicKey | string;
  readonly sysvarClock: PublicKey | string;
  readonly sysvarStakeHistory: PublicKey | string;
  readonly stakeProgram: PublicKey | string;
  readonly tokenProgram: PublicKey | string;
};
export type PosMergeStakeParam = {
  readonly validatorIndex: BN;
  readonly sourceStakeIndex: BN;
  readonly targetStakeIndex: BN;
};
export type PosMergeStakeAccounts = {
  readonly programMetadataState: PublicKey | string;
  readonly programPosState: PublicKey | string;
  readonly operationAccount: PublicKey | string;
  readonly validatorListAccount: PublicKey | string;
  readonly posStakeListAccount: PublicKey | string;
  readonly posStakeDepositPda: PublicKey | string;
  readonly posStakeWithdrawPda: PublicKey | string;
  readonly posSourceStakeAccount: PublicKey | string;
  readonly posTargetStakeAccount: PublicKey | string;
  readonly sysvarClock: PublicKey | string;
  readonly sysvarStakeHistory: PublicKey | string;
  readonly stakeProgram: PublicKey | string;
};
export type AdminUpdatePosUnstakeInfoParam = {
  readonly posProposeUnstakeWaitingEpoch: BN;
  readonly programLiqFeeCeilingSol: BN;
  readonly programLiqFeeFloorSol: BN;
  readonly programLiqFeeBasepoint: number;
  readonly programLiqFeeMax: number;
  readonly programLiqFeeMin: number;
  readonly programLiqFeeTreasuryCut: number;
};
export type AdminUpdatePosUnstakeInfoAccounts = {
  readonly programMetadataState: PublicKey | string;
  readonly programAdminAuth: PublicKey | string;
};
export type AdminUpdatePosStakeInfoParam = {
  readonly posMinStakeAmount: BN;
  readonly posNumOfSlotsBeforeEndOfEpoch: BN;
  readonly posStakeAccountRewardFeeBasepoint: BN;
  readonly posStakeAccountRewardFeeRate: BN;
  readonly posMaxStakeAccountRewardPctgBasepoint: BN;
  readonly posMaxStakeAccountRewardPctgRate: BN;
  readonly validatorExtraDelegationRunCount: BN;
};
export type AdminUpdatePosStakeInfoAccounts = {
  readonly programPosState: PublicKey | string;
  readonly programAdminAuth: PublicKey | string;
  readonly newValidatorManagerAuth: PublicKey | string;
  readonly newOperationAccount: PublicKey | string;
  readonly sysvarRent: PublicKey | string;
};
export type AdminUpdateTreasuryAccountInfoAccounts = {
  readonly programMetadataState: PublicKey | string;
  readonly programAdminAuth: PublicKey | string;
  readonly newTreasuryAmtsolAccount: PublicKey | string;
  readonly sysvarRent: PublicKey | string;
};
export type AdminUpdateMetadataAdminAuthInfoAccounts = {
  readonly programMetadataState: PublicKey | string;
  readonly newMetadataAdminAuth: PublicKey | string;
  readonly metadataAdminAuth: PublicKey | string;
  readonly sysvarRent: PublicKey | string;
};
export type AdminUpdatePosAdminAuthInfoAccounts = {
  readonly programPosState: PublicKey | string;
  readonly newPosAdminAuth: PublicKey | string;
  readonly posAdminAuth: PublicKey | string;
  readonly sysvarRent: PublicKey | string;
};
export type AdminUpdateProgramPauseInfoParam = {
  readonly programIsPaused: boolean;
};
export type AdminUpdateProgramPauseInfoAccounts = {
  readonly programMetadataState: PublicKey | string;
  readonly programAdminAuth: PublicKey | string;
};
export type PosWithdrawTicketSolAccounts = {
  readonly programMetadataState: PublicKey | string;
  readonly withdrawTicketState: PublicKey | string;
  readonly programPosSolPda: PublicKey | string;
  readonly transferSolTo: PublicKey | string;
  readonly sysvarClock: PublicKey | string;
  readonly systemProgram: PublicKey | string;
};
export type AdminClosePosAccountAccounts = {
  readonly programPosState: PublicKey | string;
  readonly posStakeListAccount: PublicKey | string;
  readonly validatorListAccount: PublicKey | string;
  readonly operationAccount: PublicKey | string;
  readonly programAdminAuth: PublicKey | string;
};
